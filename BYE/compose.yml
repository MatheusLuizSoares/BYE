
services:
  # ========================
  # ISP - Infraestrutura
  # ========================

  dns:
    build:
      context: ./ISP/dns
      dockerfile: Dockerfile
    container_name: dns
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    networks:
      - rede_isp

  portal_isp:
    build:
      context: ./ISP/portal
      dockerfile: Dockerfile
    container_name: portal_isp
    networks:
      - rede_isp

  proxy_isp:
    build:
      context: ./ISP/proxy_ISP
      dockerfile: Dockerfile
    container_name: proxy_isp
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
    networks:
      - rede_isp
      - rede_cliente1

  #email:
  #  build:
  #    context: ./ISP/email
  #    dockerfile: Dockerfile
  #  container_name: email
  #  ports:
  #    - "25:25"
  #    - "587:587"
  #    - "993:993"
  #  networks:
  #   - rede_isp

  #webmail:
  # build:
  #    context: ./ISP/webmail
  #    dockerfile: Dockerfile
  #  container_name: webmail
  #  networks:
  #   - rede_isp

  # ========================
  # CLIENTE 1
  # ========================

  portal_cliente1:
    build:
      context: ./cliente1/portal
      dockerfile: Dockerfile
    container_name: portal_cliente1
    ports:
      - "8081:80"
    networks:
      - rede_cliente1

  hotsite:
    image: nginx:alpine
    container_name: hotsite
    ports:
      - "80/tcp"
    volumes:
      - ./cliente1/hotsite:/usr/share/nginx/html:ro
    networks:
      - rede_cliente1
  ### Banco de Dados (PostgreSQL) ###
  db:
    image: postgres:15-alpine
    container_name: sign-db
    environment:
      POSTGRES_USER: ${DB_USER:-dbuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dbuserpass123}
      POSTGRES_DB: ${DB_NAME:-docsign_db}
    volumes:
      - ./cliente1/postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-dbuser} -d ${DB_NAME:-docsign_db}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - rede_cliente1
  ### Backend/API ###
  backend:
    image: salesfilho/sign-api:latest
    container_name: sign-api
    environment:
      DB_HOST: db
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-dbuser}
      DB_PASSWORD: ${DB_PASSWORD:-dbuserpass123}
      DB_NAME: ${DB_NAME:-docsign_db}
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rede_cliente1  
  ### Frontend / App ###
  frontend:
    image: salesfilho/sign-app:latest
    container_name: sign-app
    environment:
      API_BASE_URL: ${API_BASE_URL:-http://localhost:8000/api}
    ports:
      - "${FRONTEND_PORT:-8080}:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - rede_cliente1

  #sign:
  #  image: nginx:alpine
  #  container_name: sign
  #  ports:
  #    - "80/tcp"
  #  volumes:
  #    - ./cliente1/sign:/usr/share/nginx/html:ro
  #  networks:
  #    - rede_cliente1
  
  proxy_cliente:
    build:
      context: ./cliente1/proxy
    container_name: proxyC1
    networks:
      - rede_cliente1
    
networks:
  rede_isp:
    driver: bridge
  rede_cliente1:
    internal: true